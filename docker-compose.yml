version: '2.2'
services:
  config:
    build: config
    ports:
      - "8888:8888"
    healthcheck:
      test: ["CMD", "curl", "-f", "config:8888/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  registry:
    build: registry
    ports:
      - "8761:8761"
    healthcheck:
      test: ["CMD", "curl", "-f", "registry:8761/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    depends_on:
      config:
        condition: service_healthy

  rabbitmq:
    image: rabbitmq:management
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 5s
      timeout: 15s
      retries: 10

  mongodb:
    image: mongo:latest
    environment:
      MONGO_INITDB_ROOT_USERNAME: customerManagerService
      MONGO_INITDB_ROOT_PASSWORD: 1234
    ports:
      - "27017:27017"
    volumes:
      - mongo-data-volume:/var/lib/mongo/data

  keycloakdb:
    image: postgres
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    restart: always
    volumes:
      - keycloak-data-volume:/var/lib/postgresql/data

  keycloak:
    image: quay.io/keycloak/keycloak:11.0.2
    environment:
      DB_VENDOR: "POSTGRES"
      DB_ADDR: keycloakdb
      DB_PORT: 5432
      DB_USER: keycloak
      DB_PASSWORD: password
      #KEYCLOAK_USER: admin
      #KEYCLOAK_PASSWORD: password
    ports:
      - "8080:8080"
    restart: always
    depends_on:
      - keycloakdb

  gateway:
    build: gateway
    ports:
      - "4000:4000"
    depends_on:
      registry:
        condition: service_healthy

  auth_service:
    build: auth_service
    ports:
      - "5000:5000"
    depends_on:
        registry:
          condition: service_healthy

  vacancy_aggregator_core:
    build: vacancy_aggregator_core
    ports:
      - "8010:8010"
    environment:
      APP_MQ_HOST: rabbitmq
      APP_MQ_USER: guest
      APP_MQ_PASSWORD: guest
      NOTIFICATION_QUEUE_NAME: notification-queue
      NOTIFICATION_EXCHANGE: notification-exchange
      NOTIFICATION_ROUTING_KEY: notification-routing-key
    depends_on:
      rabbitmq:
        condition: service_healthy
      registry:
        condition: service_healthy

  notification-sender:
    build: notification_sender
    ports:
      - "8020:8020"
    environment:
      APP_MQ_HOST: rabbitmq
      APP_MQ_USER: guest
      APP_MQ_PASSWORD: guest
      NOTIFICATION_QUEUE_NAME: notification-queue
      NOTIFICATION_EXCHANGE: notification-exchange
      NOTIFICATION_ROUTING_KEY: notification-routing-key
      TELEGRAM_BOT_NAME: ${{ secrets.TELEGRAM_BOT_NAME }}
      TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
    depends_on:
      rabbitmq:
        condition: service_healthy
      registry:
        condition: service_healthy

volumes:
  keycloak-data-volume:
    external: true
  mongo-data-volume:
    external: true